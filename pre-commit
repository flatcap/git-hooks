#!/bin/bash

CHECK_SUFFIXES=(cpp c h conf gv sh txt vim html)
SEARCH="$(git config --global --get rich.search)"
RETCODE=0

if git rev-parse --verify HEAD >/dev/null 2>&1; then
	AGAINST=HEAD
else
	AGAINST=4b825dc642cb6eb9a060e54bf8d69288fbee4904
fi

function ignore_file()
{
	local FILE="$1"
	local SUFFIX="${FILE##*.}"
	local i

	for i in ${CHECK_SUFFIXES[*]}; do
		[ "$SUFFIX" = "$i" ] && return 1
	done

	return 0
}

function find_forbidden()
{
	[ -z "$SEARCH" ] && return 1
	ignore_file "$FILE" && return 1

	local FILE="$1"
	[ "$CHECK" = 0 ] && return 1

	grep -EHn "$SEARCH" "$FILE"
}

function find_badspace()
{
	local FILE="$1"
	local SUFFIX="${FILE##*.}"

	git diff-index --check $AGAINST -- "$FILE"

	# reverse the return code: success => bad space
	[ $? = 0 ] && return 1 || return 0
}


while read FILE; do
	TYPE="${FILE:0:1}"
	[ "$TYPE" = "D" ] && continue	# Ignore deleted files

	FILE="${FILE#*	}"
	[ $TYPE = "R" ] && FILE="${FILE#*	}"

	ignore_file    "$FILE" && continue;
	find_forbidden "$FILE" && RETCODE=1
	find_badspace  "$FILE" && RETCODE=1

done < <(git diff-index --find-renames --cached --name-status $AGAINST)

if [ "$RETCODE" = 1 ]; then
	echo
	echo "[01;31mCommit failed[0m"
	echo
fi

exit $RETCODE

